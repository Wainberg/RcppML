% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nnls.R
\name{nnls}
\alias{nnls}
\title{Non-negative least squares}
\usage{
nnls(
  a,
  b,
  x = NULL,
  fast_maxit = 10,
  cd_maxit = 100,
  tol = 1e-08,
  precision = "double",
  nonneg = TRUE
)
}
\arguments{
\item{a}{symmetric positive definite matrix giving coefficients of linear system}

\item{b}{vector or matrix giving right-hand side(s) of linear system}

\item{x}{initial value for \eqn{x} if using coordinate descent, and not using an unconstrained least squares solution as initialization.}

\item{fast_maxit}{maximum number of iterations of pre-conditioning in NNLS solver prior to coordinate descent, see \code{\link{nnls}}}

\item{cd_maxit}{maximum number of coordinate descent iterations for solution refinement after initial FAST step. Only used as stopping criterion if \code{tol} is not met.}

\item{tol}{stopping criterion for coordinate descent iterations given by the maximum change in a coefficient between consecutive solutions}

\item{precision}{either "float" or "double"}

\item{nonneg}{apply non-negativity constraints}
}
\description{
Solves the equation \eqn{Ax = b} for \eqn{x} given symmetric positive definite \eqn{A} and vector or matrix \eqn{b}, subject to non-negativity constraints.
}
\details{
\code{RcppML::solve} implements a new and fastest-in-class algorithm for non-negative least squares:
\enumerate{
\item \strong{initialization} is done by solving for the unconstrained least squares solution.
\item Next, \strong{forward active set tuning} (FAST) provides a near-exact solution (often
exact for well-conditioned systems) by setting all negative values in the unconstrained
solution to zero, re-solving the system for only positive values, and repeating the process
until the solution gives only positive values. Set \code{cd_maxit = 0} to use only the FAST solver.
\item \strong{coordinate descent} refines the FAST solution and finds the best solution discoverable
by gradient descent. The coordinate descent solution is only used if it gives a better error
than the FAST solution. Generally, coordinate descent re-introduces variables constrained to zero by
FAST back into the feasible set, but does not dramatically change the solution.
}

An exceptionally fast exact solver is used for 2-variable solutions.
}
