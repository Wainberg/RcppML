#' @param indices indices to keep
subsetModel <- function(nmf_model, indices){
nmf_model$w <- nmf_model$w[, indices]
nmf_model$d <- nmf_model$d[indices]
nmf_model$h <- nmf_model$h[indices, ]
nmf_model
}
# dataset with all samples
labels <- colnames(DMRs)
for(i in 1:length(labels)){
if(substring(labels[i], 0, 1) == "P") {
labels[i] <- "AML sample"
} else if(substring(labels[i], 0, 1) == "L"){
labels[i] <- "LMPP"
} else if(substring(labels[i], 0, 1) == "G"){
labels[i] <- "GMP"
} else{
labels[i] <- "MEP"
}
}
nmf_model <- nmf(DMRs, k = 5, tol = 1e-10, maxit = 1000, seed = 1:10, verbose = F)
nmf_model <- nmf(DMRs, k = 5, tol = 1e-10, maxit = 1000, seed = 1:10, verbose = T)
nmf_model <- nmf(DMRs, k = 5, tol = 1e-10, maxit = 1000, seed = 123, verbose = T)
str(nmf_model)
nmf_model$w
str(df)
hist(df$nmf_factor)
ggplot(df, aes(x = "longitude", y = "latitude", color = "nmf_factor")) +
geom_point() +
scale_color_viridis(option = "B") +
theme_void() +
theme(legend.position = "none") +
ggtitle(paste0("Factor ", i))
ggplot(df, aes(x = "longitude", y = "latitude", color = "nmf_factor")) +
geom_point() +
theme_void() +
theme(legend.position = "none") +
ggtitle(paste0("Factor ", i)
ggplot(df, aes(x = "longitude", y = "latitude", color = "nmf_factor")) +
geom_point() +
theme_void() +
theme(legend.position = "none") +
ggtitle(paste0("Factor ", i)
ggplot(df, aes(x = "longitude", y = "latitude", color = "nmf_factor")) +
geom_point() +
theme_void()
head(df)
ggplot(df, aes(x = "longitude", y = "latitude")) +
geom_point() +
theme_void()
plot(df$latitude, df$longitude)
dev.off()
df <- cbind(hawaiibirds$metadata, model$h[,1])
df <- cbind(hawaiibirds$metadata, model$h[1,])
head(df)
df <- data.frame(
"lat" = hawaiibirds$metadata$latitude,
"lng" = hawaiibirds$metadata$longitude,
"nmf_factor" = model$h[i, ])
model
i
i <- 1
df <- data.frame(
"lat" = hawaiibirds$metadata$latitude,
"lng" = hawaiibirds$metadata$longitude,
"nmf_factor" = model$h[i, ])
df
ggplot(df, aes(x = "lng", y = "lat", color = "nmf_factor")) +
geom_point() +
scale_color_viridis(option = "B") +
theme_void() +
theme(legend.position = "none") +
ggtitle(paste0("Factor ", i))
ggplot(df, aes(x = "lng", y = "lat", color = "nmf_factor")) +
geom_point() +
scale_color_viridis(option = "D") +
theme_void() +
theme(legend.position = "none") +
ggtitle(paste0("Factor ", i))
ggplot(df, aes(x = "lng", y = "lat", color = "nmf_factor")) +
geom_point() +
theme_void() +
theme(legend.position = "none") +
ggtitle(paste0("Factor ", i))
library(ggplot2)
library(cowplot)
library(viridis)
for(i in 1:4){
df <- data.frame(
"lat" = hawaiibirds$metadata$latitude,
"lng" = hawaiibirds$metadata$longitude,
"nmf_factor" = model$h[i, ])
plots[[i]] <- ggplot(df, aes(x = lng, y = lat, color = nmf_factor)) +
geom_point() +
scale_color_viridis(option = "B") +
theme_void() +
theme(legend.position = "none") +
ggtitle(paste0("Factor ", i))
}
plot_grid(plotlist = plots, nrow = 2)
library(ggplot2)
library(cowplot)
library(viridis)
for(i in 1:4){
df <- data.frame(
"lat" = hawaiibirds$metadata$latitude,
"lng" = hawaiibirds$metadata$longitude,
"nmf_factor" = model$h[i, ])
plots[[i]] <- ggplot(df, aes(x = lng, y = lat, color = nmf_factor)) +
geom_point() +
scale_color_viridis(option = "B") +
theme_void() +
theme(legend.position = "none") +
ggtitle(paste0("Factor ", i))
}
plot_grid(plotlist = plots, nrow = 2)
library(ggplot2)
library(cowplot)
library(viridis)
for(i in 1:4){
df <- data.frame(
"lat" = hawaiibirds$metadata$latitude,
"lng" = hawaiibirds$metadata$longitude,
"nmf_factor" = model$h[i, ])
plots[[i]] <- ggplot(df, aes(x = lng, y = lat, color = nmf_factor)) +
geom_point() +
scale_color_viridis(option = "B") +
theme_void() +
theme(legend.position = "none") +
ggtitle(paste0("Factor ", i))
}
plot_grid(plotlist = plots, nrow = 2)
islands <- hawaiibirds$metadata$island
plot(summary.nmf(model, group_by = islands))
library(ggrepel)
biplot.nmf(model, factors = c(7, 8), matrix = "w") +
scale_y_continuous(trans = "sqrt") +
scale_x_continuous(trans = "sqrt") +
geom_text_repel()
biplot(model, factors = c(7, 8), matrix = "w") +
scale_y_continuous(trans = "sqrt") +
scale_x_continuous(trans = "sqrt") +
geom_text_repel()
islands <- hawaiibirds$metadata$island
plot(summary.nmf(model, group_by = islands))
islands <- hawaiibirds$metadata$island
plot(summary(model, group_by = islands))
?biplot.nmf
df <- data.frame(cbind(umap(t(model$h)), islands))
library(uwot)
df <- data.frame(cbind(umap(t(model$h)), islands))
head(Df)
head(df)
colnames(df) <- c("umap1", "umap2", "island")
str(df)
umap_model <- umap(t(model$h))
df <- data.frame(
"umap1" = umap_model[,1],
"umap2" = umap_model[,2],
"island" = islands)
str(df)
ggplot(df, aes(x = umap1, y = umap2, color = island)) + geom_point() + theme_void()
library(uwot)
umap_model <- umap(t(model$h))
df <- data.frame(
"umap1" = umap_model[,1],
"umap2" = umap_model[,2],
"island" = islands)
ggplot(df, aes(x = umap1, y = umap2, color = island)) +
geom_point() + theme_void() +
ggtitle("UMAP reduction of geographical grids\nbased on species community representation")
library(uwot)
umap_model <- umap(t(model$h))
df <- data.frame(
"umap1" = umap_model[,1],
"umap2" = umap_model[,2],
"island" = islands)
ggplot(df, aes(x = umap1, y = umap2, color = island)) +
geom_point() + theme_void() +
ggtitle("UMAP reduction of geographical grids\nbased on species community representation")
islands <- hawaiibirds$metadata$island
plot(summary(model, group_by = islands))
library(ggrepel)
biplot(model, factors = c(7, 8), matrix = "w") +
scale_y_continuous(trans = "sqrt") +
scale_x_continuous(trans = "sqrt") +
geom_text_repel()
library(ggplot2)
library(cowplot)
library(viridis)
for(i in 1:4){
df <- data.frame(
"lat" = hawaiibirds$metadata$latitude,
"lng" = hawaiibirds$metadata$longitude,
"nmf_factor" = model$h[i, ])
plots[[i]] <- ggplot(df, aes(x = lng, y = lat, color = nmf_factor)) +
geom_point() +
scale_color_viridis(option = "B") +
theme_void() +
theme(legend.position = "none") +
ggtitle(paste0("Factor ", i))
}
plot_grid(plotlist = plots, nrow = 2)
library(ggplot2)
library(cowplot)
library(viridis)
for(i in 1:4){
df <- data.frame(
"lat" = hawaiibirds$metadata$latitude,
"lng" = hawaiibirds$metadata$longitude,
"nmf_factor" = model$h[i, ])
plots[[i]] <- ggplot(df, aes(x = lng, y = lat, color = nmf_factor)) +
geom_point(size = 1) +
scale_color_viridis(option = "B") +
theme_void() +
theme(legend.position = "none") +
ggtitle(paste0("Factor ", i))
}
plot_grid(plotlist = plots, nrow = 2)
head(umap(model$w))
umap_coords <- umap(model$w)
ggplot(umap_coords, aes(x = umap_coords[,1], y = umap_coords[,2])) +
geom_point() + theme_void() +
ggtitle("UMAP reduction of geographical grids\nbased on species community representation")
umap_coords <- data.frame(umap(model$w))
head(umap_coords)
str(umap_coords)
umap <- data.frame(uwot::umap(model$w))
colnames(umap) <- c("umap1", "umap2")
ggplot(umap, aes(x = umap[,1], y = umap[,2])) +
geom_point() + theme_void() +
ggtitle("UMAP reduction of geographical grids\nbased on species community representation")
colnames(umap) <- c("umap1", "umap2")
ggplot(umap, aes(x = umap[,1], y = umap[,2], label = rownames(model$w))) +
geom_point() + theme_void() +
ggtitle("UMAP reduction of geographical grids\nbased on species community representation") +
geom_text_repel()
library(uwot)
umap <- data.frame(uwot::umap(model$w))
colnames(umap) <- c("umap1", "umap2")
ggplot(umap, aes(x = umap[,1], y = umap[,2], label = rownames(model$w))) +
geom_point() + theme_void() +
ggtitle("UMAP reduction of geographical grids\nbased on species community representation") +
geom_text_repel()
library(uwot)
umap <- data.frame(uwot::umap(model$w))
colnames(umap) <- c("umap1", "umap2")
ggplot(umap, aes(x = umap[,1], y = umap[,2], label = rownames(model$w))) +
geom_point() + theme_void() +
ggtitle("UMAP reduction of geographical grids\nbased on species community representation") +
geom_text_repel()
?geom_text_repel
ggplot(umap, aes(x = umap[,1], y = umap[,2], label = rownames(model$w))) +
geom_point() + theme_void() +
ggtitle("UMAP reduction of geographical grids\nbased on species community representation") +
geom_text_repel(box.padding = 0, min.segment.length = 0.25, seed = 123, max.overlaps = 20)
ggplot(umap, aes(x = umap[,1], y = umap[,2], label = rownames(model$w))) +
geom_point() + theme_void() +
ggtitle("UMAP reduction of geographical grids\nbased on species community representation") +
geom_text_repel(box.padding = 0, min.segment.length = 0.25, seed = 123, max.overlaps = 20, size = 1)
ggplot(umap, aes(x = umap[,1], y = umap[,2], label = rownames(model$w))) +
geom_point() + theme_void() +
ggtitle("UMAP reduction of geographical grids\nbased on species community representation") +
geom_text_repel(box.padding = 0, min.segment.length = 0.25, seed = 123, max.overlaps = 20, size = 10)
ggplot(umap, aes(x = umap[,1], y = umap[,2], label = rownames(model$w))) +
geom_point() + theme_void() +
ggtitle("UMAP reduction of geographical grids\nbased on species community representation") +
geom_text_repel(box.padding = 0, min.segment.length = 0.25, seed = 123, max.overlaps = 20, size = 2)
ggplot(umap, aes(x = umap[,1], y = umap[,2], label = rownames(model$w))) +
geom_point() + theme_void() +
ggtitle("UMAP reduction of geographical grids\nbased on species community representation") +
geom_text_repel(box.padding = 0, min.segment.length = 0.25, seed = 123, max.overlaps = 20, size = 3)
ggplot(umap, aes(x = umap[,1], y = umap[,2], label = rownames(model$w))) +
geom_point() + theme_void() +
ggtitle("UMAP reduction of geographical grids\nbased on species community representation") +
geom_text_repel(box.padding = 0, min.segment.length = 0.25, seed = 123, max.overlaps = 10, size = 3)
ggplot(umap, aes(x = umap[,1], y = umap[,2], label = rownames(model$w))) +
geom_point() + theme_void() +
ggtitle("UMAP reduction of geographical grids\nbased on species community representation") +
geom_text_repel(seed = 123, max.overlaps = 10, size = 3)
plot(colSums(hawaiibirds$counts))
plot(rowSums(hawaiibirds$counts))
head(rowSums(hawaiibirds$counts))
head(sort(rowSums(hawaiibirds$counts)), decreasing = TRUE)
names(head(sort(rowSums(hawaiibirds$counts)), decreasing = TRUE)[1:50])
names(sort(rowSums(hawaiibirds$counts)), decreasing = TRUE)[1:50])
names(sort(rowSums(hawaiibirds$counts), decreasing = TRUE)[1:50])
species <- names(sort(rowSums(hawaiibirds$counts), decreasing = TRUE)[1:50])
umap <- data.frame(uwot::umap(model$w[species, ]))
ggplot(umap, aes(x = umap[,1], y = umap[,2], label = species)) +
geom_point() + theme_void() +
ggtitle("UMAP reduction of geographical grids\nbased on species community representation") +
geom_text_repel()
library(uwot)
species <- names(sort(rowSums(hawaiibirds$counts), decreasing = TRUE)[1:50])
umap <- data.frame(uwot::umap(model$w[species, ]))
ggplot(umap, aes(x = umap[,1], y = umap[,2], label = species)) +
geom_point() + theme_void() +
ggtitle("UMAP reduction of geographical grids\nbased on species community representation") +
geom_text_repel()
library(uwot)
species <- names(sort(rowSums(hawaiibirds$counts), decreasing = TRUE)[1:50])
umap <- data.frame(uwot::umap(model$w[species, ]))
ggplot(umap, aes(x = umap[,1], y = umap[,2], label = species)) +
geom_point() + theme_void() +
ggtitle("UMAP reduction of geographical grids\nbased on species community representation") +
geom_text_repel()
library(uwot)
species <- names(sort(rowSums(hawaiibirds$counts), decreasing = TRUE)[1:50])
umap <- data.frame(uwot::umap(model$w[species, ]))
ggplot(umap, aes(x = umap[,1], y = umap[,2], label = species)) +
geom_point() + theme_void() +
ggtitle("UMAP reduction of geographical grids\nbased on species community representation") +
geom_text_repel(max.overlaps = 10, size = 3, seed = 123)
library(uwot)
species <- names(sort(rowSums(hawaiibirds$counts), decreasing = TRUE)[1:100])
umap <- data.frame(uwot::umap(model$w[species, ]))
ggplot(umap, aes(x = umap[,1], y = umap[,2], label = species)) +
geom_point() + theme_void() +
ggtitle("UMAP reduction of geographical grids\nbased on species community representation") +
geom_text_repel(max.overlaps = 10, size = 3, seed = 123)
library(uwot)
umap <- data.frame(uwot::umap(model$w))
ggplot(umap, aes(x = umap[,1], y = umap[,2], label = rownames(model$w))) +
geom_point() + theme_void() +
ggtitle("UMAP reduction of geographical grids\nbased on species community representation") +
geom_text_repel(max.overlaps = 10, size = 3, seed = 123)
library(uwot)
umap <- data.frame(uwot::umap(model$w))
ggplot(umap, aes(x = umap[,1], y = umap[,2], label = rownames(model$w))) +
geom_point() + theme_void() +
ggtitle("UMAP reduction of geographical grids\nbased on species community representation") +
geom_text_repel(max.overlaps = 20, size = 2.5, seed = 123)
library(uwot)
umap <- data.frame(uwot::umap(model$w))
ggplot(umap, aes(x = umap[,1], y = umap[,2], label = rownames(model$w))) +
geom_point() + theme_void() +
ggtitle("UMAP reduction of geographical grids\nbased on species community representation") +
geom_text_repel(max.overlaps = 15, size = 2.5, seed = 123)
library(uwot)
umap <- data.frame(uwot::umap(model$w))
ggplot(umap, aes(x = umap[,1], y = umap[,2], label = rownames(model$w))) +
geom_point() + theme_void() +
ggtitle("UMAP reduction of geographical grids\nbased on species community representation") +
geom_text_repel(max.overlaps = 15, size = 2.5, seed = 123)
library(uwot)
umap <- data.frame(uwot::umap(model$w))
ggplot(umap, aes(x = umap[,1], y = umap[,2], label = rownames(model$w))) +
geom_point() + theme_void() +
ggtitle("UMAP reduction of geographical grids\nbased on species community representation") +
geom_text_repel(max.overlaps = 15, size = 2.5, seed = 123)
cv <- crossValidate(HawaiiBirds$counts, k = unique(as.integer(1.25^(1:18))), reps = 3, verbose = 0)
cv <- crossValidate(data, k = unique(as.integer(1.25^(1:18))), reps = 3, verbose = 0)
devtools::document()
cv <- crossValidate(data, k = unique(as.integer(1.25^(1:18))), reps = 3, verbose = 0)
cv <- crossValidate(data, k = unique(as.integer(1.25^(1:18))), reps = 3, verbose = 0)
devtools::document()
cv <- crossValidate(data, k = unique(as.integer(1.25^(1:18))), reps = 3, verbose = 0)
devtools::document()
cv <- crossValidate(data, k = unique(as.integer(1.25^(1:18))), reps = 3, verbose = 0)
devtools::document()
cv <- crossValidate(data, k = unique(as.integer(1.25^(1:18))), reps = 3, verbose = 0)
devtools::document()
cv <- crossValidate(data, k = unique(as.integer(1.25^(1:18))), reps = 3, verbose = 0)
cv <- crossValidate(data, k = unique(as.integer(1.25^(1:18))), reps = 3, verbose = 1)
cv
ggplot(cv, aes(x = k, y = value, color = rep)) +
geom_point() + geom_line() + theme_classic() +
geom_line(aes(x = 10), linetype="dotted")
unique(as.integer(1.25^(1:16)))
?nmf
devtools::document()
install.packages('RcppML')                     # install CRAN version
# devtools::install_github("zdebruine/RcppML") # compile dev version
install.packages("RcppML")
library(RcppML)
library(MLdata)
data(hawaiibirds)
data <- hawaiibirds$counts
model <- nmf(data, k = 10, verbose = FALSE, seed = 123)
model
cv <- crossValidate(data, k = c(1:5, 7, 10, 15, 20, 25, 35, 50), reps = 3, verbose = FALSE)
library(RcppML)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
biplot(model, factors = c(7, 8), matrix = "w") +
scale_y_continuous(trans = "sqrt") +
scale_x_continuous(trans = "sqrt") +
geom_text_repel(size = 2.5, seed = 123, max.overlaps = 15)
devtools::build_vignettes()
.Last.error.trace
devtools::build_vignettes()
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
library(knitr)
R.version()
version
devtools::document()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(RcppML)
library(MLdata)
library(ggplot2)
library(cowplot)
data(iris)
model <- nmf(iris[,1:4], k = 3, verbose = FALSE, seed = 1)
model
data(movielens75k)
model_L1 <- nmf(movielens75k$ratings, k = 5, L1 = 0.1, verbose = FALSE, tol = 1e-3, seed = 123)
sparsity(model_L1)
train_users <- sample(1:ncol(movielens75k$ratings), 500)
test_users <- (1:ncol(movielens75k$ratings))[-train_users]
A <- movielens75k$ratings[, train_users]
min(rowSums(A))
min(colSums(A))
devtools::document()
trained_model <- nmf(movielens75k$ratings[, train_users], k = 10, mask_zeros = TRUE)
min(rowSums(movielens75k$ratings))
min(colSums(movielens75k$ratings))
plot(sort(rowSums(movielens75k$ratings)))
plot(sort(rowSums(movielens75k$ratings)), log = 'y')
ratings <- movielens75k$ratings
genres <- movielens75k$genres
head(genres)
dim(genres)
dim(ratings)
sum(rowSums(ratings == 0))
sum(rowSums(ratings) == 0)
dim(ratings)
ratings <- ratings[which(rowSums(ratings) > 5), ]
dim(ratings)
plot(sort(rowSums(ratings)), log = 'y')
genres <- genres[, which(colnames(genres) %in% rownames(ratings))]
dim(genres)
length(unique(colnames(genres)))
length(unique(rownames(ratings)))
duplicated(rownames(ratings))
rownames(ratings)[which(duplicated(rownames(ratings)))]
colnames(genres)[which(duplicated(colnames(genres)))]
ratings <- ratings[-which(rownames(ratings) == "War of the Worlds (2005)"), ]
dim(ratings)
which("Saturn 3 (1980)" %in% rownames(ratings))
ratings <- ratings[-which(rownames(ratings) == "Saturn 3 (1980)"), ]
dim(ratings)
genres <- genres[, which(colnames(genres) %in% rownames(ratings))]
dim(genres)
dim(ratings)
min(rowSums(genres))
max(rowSums(genres))
min(colSums(genres))
max(colSums(genres))
min(colSums(ratings))
max(colSums(ratings))
sum(ratings@x)
dim(ratings)
movielens <- list("ratings" = ratings, "genres" = genres)
save(movielens, file = "C:/Users/Owner/Documents/GitHub/MLdata/data/movielens.rdata")
dim(ratings)
library(usethis)
library(pkgdown)
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
usethis::deploy_site_github()
pkgdown::deploy_site_github()
usethis::use_github_actions("pkgdown")
usethis::use_github_actions()
pkgdown::deploy_site_github()
getwd()
pkgdown::deploy_site_github(tarball = "../RcppML_0.5.0.tar.gz")
travis::use_travis_deploy()
gh::gh_token()
gh_token_help()
devtools::document()
library(RcppML)
pkgdown::build_site()
pkgdown::build_site()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
install.packages('RcppML')                     # install CRAN version
# devtools::install_github("zdebruine/RcppML") # compile dev version
devtools::install_github("zdebruine/MLdata")
library(RcppML)
library(Matrix)
library(MLdata)
library(ggplot2)
library(cowplot)
data(iris)
model <- nmf(iris[,1:4], k = 3, seed = 1)
model
methods(class = "nmf")
species_stats <- summary(model, group_by = iris$Species)
species_stats
plot(species_stats, stat = "sum")
biplot(model, factors = c(1, 2), group_by = iris$Species)
model2 <- nmf(iris[,1:4], k = 3, seed = 1:10, tol = 1e-5)
# MSE of model from single random initialization
mse(model, iris[,1:4])
# MSE of best model among 10 random restarts
mse(model2, iris[,1:4])
data(movielens)
ratings <- movielens$ratings
model_L1 <- nmf(ratings, k = 5, L1 = 0.05, seed = 123, mask_zeros = TRUE)
library(RcppML)
